#summary Wiki-fied version of the s3backer man page

Apologies for the funky syntax highlighting. There doesn't seem to be a way to disable the wiki syntax...

{{{
S3BACKER(1)               BSD General Commands Manual              S3BACKER(1)

NAME
     s3backer - FUSE-based single file backing store via Amazon S3

SYNOPSIS
     s3backer [options] bucket /mount/point

DESCRIPTION
     s3backer is a filesystem that contains a single file backed by the Amazon
     Simple Storage Service (Amazon S3).  As a filesystem, it is quite small
     and simple: it provides a single normal file having a fixed size.  The
     file is divided up into blocks, and the content of each block is stored
     in a unique Amazon S3 object.

     In typical usage, a `normal' filesystem is mounted on top of the file
     exported by the s3backer filesystem using a loopback mount.  This
     arrangement has several benefits:

     o   You get full UNIX filesystem semantics and can configure the `upper'
         filesystem any way you want.

     o   When storing your data on Amazon S3 servers, which are not under your
         control, encrypting the data becomes important. This capability is
         supported natively on Linux via loopback mounts.

     o   Since S3 data is accessed over the network, local caching is also
         very important for performance reasons.  By making the s3backer
         filesystem block size equal to (or a multiple of) the kernel's native
         block size, all of the filesystem caching can be done where it should
         be: in the kernel via the kernel's page cache.  itself does not cache
         any file data.

     o   The user benefits from the ability to create a multi-terabyte
         filesystem stored in the `cloud' and available from anywhere on the
         Internet.

     As a simple optimization, s3backer does not store blocks containing all
     zeroes; instead, they are simply deleted.  Conversely, reads of non-exis-
     tent blocks will contain all zeroes.  Therefore, no initialization is
     necessary when creating a new filesystem.

     Since Amazon S3 makes relatively weak guarantees relating to the timing
     and consistency of reads vs. writes (collectively known as ``eventual
     consistency''), s3backer includes logic and configuration parameters to
     work around these limitations.  These are:

     1.  Regarding PUT/DELETE operations on the same block: avoidance of over-
         lapping operations plus a configurable minimum delay between consecu-
         tive operations. This ensures S3 doesn't receive these operations out
         of order.

     2.  An internal MD5 checksum cache, which enables s3backer to automati-
         cally detect and reject `stale' information returned by GET opera-
         tions.

     Althogh it functions over the network, the s3backer filesystem is not a
     distributed filesystem and does not support simultaneous mounts.

OPTIONS
     Options specific to s3backer are as follows:

     --accessFile=FILE
             Specify a file containing `accessID:accessKey' pairs, one per-
             line.  Blank lines and lines beginning with a `#' are ignored.
             If no --accessKey is specified, this file will be searched for
             the entry matching the access ID specified via --accessId; if
             neither --accessKey nor --accessId is specified, the first entry
             in this file will be used.  Default value is
             $HOME/.s3backer_passwd.

     --accessId=ID
             Specify Amazon S3 access ID.  If no access ID is specified (and
             none is found in the access file) then s3backer will still func-
             tion, but only reads of publicly available filesystems will work.

     --accessKey=KEY
             Specify Amazon S3 access key. To avoid publicizing this secret
             via the command line, use --accessFile instead of this flag.

     --accessType=TYPE
             Specify the Amazon S3 access privilege ACL type for newly written
             blocks.  The value must be one of `private', `public-read', `pub-
             lic-read-write', or `authenticated-read'.

     --baseURL=URL
             Specify the base URL. Default is `http://s3.amazonaws.com/'.

     --blockSize=SIZE
             Specify the block size. This must be a power of two and should be
             a multiple of the native page size.  The size may have an
             optional suffix 'K' for kilobytes, 'M' for megabytes, etc.
             s3backer supports partial block operations, though for writes
             this may require a read and then a write.  Proper alignment of
             the s3backer block size with the intended use (e.g., the block
             size of the `upper' filesystem) will minimize or eliminate the
             extra reads.  s3backer will attempt to auto-detect the block size
             by reading block number zero.  If this option is not specified,
             the auto-detected value will be used.  If this option is speci-
             fied but disagrees with the auto-detected value, s3backer will
             exit with an error unless --force is also given.  If auto-detec-
             tion fails because block number zero does not exist, and this
             option is not specified, then the default value of 4K (4096) is
             used.

     --cacheSize=SIZE
             Specify the size of the MD5 checksum cache (in blocks).  If the
             cache is full when a new block is written, the write will block
             until there is room.  Therefore, it is important to configure
             --cacheTime and --cacheSize according to the frequency of writes
             to the filesystem overall and to the same block repeatedly.
             Alternately, a value equal to the number of blocks in the
             filesystem eliminates this problem but consumes the most memory
             when full (each entry in the cache is approximately 40 bytes).  A
             value of zero disables the cache.  Default value is 1000.

     --cacheTime=MILLIS
             Specify in milliseconds the time after a block has been success-
             fully written for which the MD5 checksum of the block's contents
             should be cached, for the purpose of detecting stale data during
             subsequent reads.  A value of zero means `infinite' and provides
             a guarantee against reading stale data; however, you should only
             do this when --cacheSize is configured to be equal to the number
             of blocks; otherwise deadlock will (eventually) occur.  This
             value must be at least as big as --minWriteDelay. This value must
             be set to zero when --cacheSize is set to zero (cache disabled).
             Default value is 10 seconds.

     --connectTimeout=SECONDS
             Specify a timeout in seconds for the initial HTTP connection.
             Default is 30 seconds.

     --filename=NAME
             Specify the name of the single file that appears in the s3backer
             filesystem.  Default is `file'.

     --force
             Proceed even if the value specified by --blockSize or --size dis-
             agrees with the auto-detected value.  This is will certainly lead
             to reading garbled data and should only be used when you intend
             to write over an existing filesystem with a new one.

     -h --help
             Print a help message and exit.

     --ioTimeout=SECONDS
             Specify a timeout in seconds for the completion of an HTTP opera-
             tion after the initial connection.  Default is 30 seconds.

     --maxRetry=COUNT
             Specify the number of times s3backer should retry the HTTP opera-
             tion when it fails.  Failures include network failures and time-
             outs, 5xx server errors, and reads of stale data (i.e., MD5 mis-
             match).  If the last attempt fails, an error will be returned.
             Default value is 9 retries (10 total attempts).

     --retryPause=MILLIS
             Time in milliseconds to pause between the aforementioned retries.
             Default value is 1000ms (1 second).

     --minWriteDelay=MILLIS
             Specify a minimum time in milliseconds between the successful
             completion of a write and the initiation of another write to the
             same block. This delay ensures that S3 doesn't receive the writes
             out of order.  Default value is 500ms.

     --prefix=STRING
             Specify a prefix to prepend to the resource names within bucket
             that identify each block.  Default is the empty string.

     --size=SIZE
             Specify the size (in bytes) of the single file to be exported by
             the filesystem.  The size may have an optional suffix 'K' for
             kilobytes, 'M' for megabytes, 'G' for gigabytes, or 'T' for ter-
             abytes.  s3backer will attempt to auto-detect the block size by
             reading block number zero.  If this option is not specified, the
             auto-detected value will be used.  If this option is specified
             but disagrees with the auto-detected value, s3backer will exit
             with an error unless --force is also given.

     --version
             Output version and exit.

     In addition, s3backer accepts all of the generic FUSE options as well.
     Here is a partial list:

     -d      Enable debug mode (implies -f).

     -f      Run in the foreground (do not fork).

     -s      Run in single-threaded mode.

     -o allow_root
             Allow root (only) to view backed file.

     -o allow_other
             Allow all users to view backed file.

     -o nonempty
             Allow all users to view backed file.

     -o uid=UID
             Override the user ID of the backed file, which defaults to the
             current user ID.

     -o gid=GID
             Override the group ID of the backed file, which defaults to the
             current group ID.

     -o sync_read
             Do synchronous reads.

     -o max_readahead=NUM
             Set maximum read-ahead (in bytes).

FILES
     $HOME/.s3backer_passwd
             Contains Amazon S3 `accessID:accessKey' pairs.

SEE ALSO
     mount(8), umount(8), fusermount(8).

     s3backer: FUSE-based single file backing store via Amazon S3,
     http://s3backer.googlecode.com/.

     Amazon Simple Storage Service (Amazon S3), http://aws.amazon.com/s3.

     FUSE: Filesystem in Userspace, http://fuse.sourceforge.net/.

     Google Search for `linux page cache',
     http://www.google.com/search?q=linux+page+cache.

AUTHOR
     Archie L. Cobbs <archie@dellroad.org>

BSD                              June 21, 2008                             BSD
}}}